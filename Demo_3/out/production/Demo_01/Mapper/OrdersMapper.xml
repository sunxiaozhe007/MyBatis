<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，对statement的信息进行分类管理 -->
<!-- 在mapper代理时，它具有特殊及重要的作用 -->
<mapper namespace="Mapper.OrdersMapper">

	<!--一对一映射之resultType-->
	<select id="findOrdersAndUser" resultType="po.OrdersExt">
		SELECT
  			orders.`id`,
  			orders.`user_id`,
  			orders.`number`,
  			user.`username`,
  			user.`sex`
		FROM
  			orders,
  		USER
		WHERE orders.`user_id` = user.`id`
	</select>

	<!--OrdersAndUserResultMap-->
	<resultMap id="OrdersAndUserResultMap" type="po.OrdersExt">
		<!--订单信息-->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<!--用户信息-->
		<!--association:一对一关联映射-->
		<!--property:关联信息查询的结果将要映射的扩展类中的对象属性名称-->
		<!--id标签:建议关联查询时必须写上,不写不会报错,但会影响性能-->
		<association property="user" javaType="po.User" >
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
		</association>

	</resultMap>
	<!--一对一映射之resultMap-->
	<select id="findOrdersAndUserResultMap" resultMap="OrdersAndUserResultMap">
		SELECT
  			orders.`id`,
  			orders.`user_id`,
  			orders.`number`,
  			user.`username`,
  			user.`sex`
		FROM
  			orders,
  		USER
		WHERE orders.`user_id` = user.`id`
	</select>

	<!--OrdersAndDetailRstMap-->
	<!--extends:可以继承一个已有的resultMap，指定resultMap的唯一标识即可-->
	<!--注意：继承时，只能继承type类型也一样的resultMap-->
	<resultMap id="OrdersAndDetailRstMap" type="po.OrdersExt" extends="OrdersAndUserResultMap">
		<!--订单明细信息（一对多）-->
		<!--collection:映射一对多关系-->
		<collection property="detailList" ofType="po.Orderdetail">
			<id column="detailId" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
		</collection>
	</resultMap>

	<!--一对多映射-->
	<select id="findOrdersAndDetailRstMap" resultMap="OrdersAndDetailRstMap">
				SELECT
		  orders.`id`,
		  orders.`user_id`,
		  orders.`number`,
		  user.`username`,
		  user.`sex`,
		  orderdetail.`id` detailId,
		  orderdetail.`items_id`,
		  orderdetail.`items_num`
		FROM
		  orders,
		  USER,
		  orderdetail
		WHERE orders.`user_id` = user.`id` AND  orders.`id`=orderdetail.`orders_id`
	</select>


	<!--UserAndItemsRstMap-->
	<resultMap id="UserAndItemsRstMap" type="po.User">
		<!--用户信息-->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<!--订单信息（一对多）-->
		<collection property="orders" ofType="po.Orders" >
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<!--订单明细信息(一对多)-->
			<collection property="detailList" ofType="po.Orderdetail">
				<id column="detailId" property="id"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<!--商品信息(一对一)-->
				<association property="items" javaType="po.Items">
					<id column="items_id" property="id"/>
					<result column="name" property="name"/>
					<result column="price" property="price"/>
				</association>
			</collection>
		</collection>  
	</resultMap>


	<!--多对多-->
	<select id="findUserAndItemsRstMap" resultMap="UserAndItemsRstMap">
				SELECT
		  orders.`id`,
		  orders.`user_id`,
		  orders.`number`,
		  user.`username`,
		  user.`sex`,
		  orderdetail.`id` detailId,
		  orderdetail.`items_id`,
		  orderdetail.`items_num`,
		  items.`name`,
		  items.`price`
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items
		WHERE orders.`user_id` = user.`id`
		  AND orders.`id` = orderdetail.`orders_id`
		  AND orderdetail.`items_id` = items.`id`
	</select>

	<!--lazyLoadingRstMap-->
	<resultMap id="lazyLoadingRstMap" type="po.OrdersExt">
		<!--订单信息-->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<!--用户信息（一对一）-->
		<!--select:指定关联的查询statement（即查询用户的statement的id），然后将查询结果封装到property属性指定的变量中-->
		<!--column:通过column指定的列所查询出的结果，作为select指的statement入参-->
		<!--注意：如果select指定的statement，入参需要多个值，需要在column中{col1=prop1,,col2=prop2}-->
		<association property="user" select="Mapper.UserMapper.findUserById" column="user_id">

		</association>
	</resultMap>
	
	<!--延迟加载-->
	<select id="findOrderAndUserLazyLoading" resultMap="lazyLoadingRstMap">
		select * from
		orders
	</select>
</mapper>

