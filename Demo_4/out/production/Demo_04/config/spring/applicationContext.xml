<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <!--加载java配置文件-->
    <context:property-placeholder location="db.properties"/>
        <!--创建数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <!--sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis的全局配置文件的路径-->
        <property name="configLocation" value="config/mybatis/SqlMapConfig.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>

    </bean>

    <!--UserDao-->
    <bean id="userDao" class="dao.UserDaoImpl">
        <!--依赖注入SqlSessionFactory-->
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!--配置UserMapper代理类
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        设置代理类的接口
        <property name="mapperInterface" value="mapper.UserMapper"/>
        依赖注入SqlSessionFactory
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <!--批量配置mapper代理类,默认bean的id为类名首字母小写-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置扫描的包-->
        <property name="basePackage" value="mapper"/>

        <!--默认不需要配置SqlSessionFactory（只有一个默认不需要配置SqlSessionFactory时），单独配置也可以-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>